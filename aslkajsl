[33mcommit f04f99fcd532729ba2cd520fb2fdf39b2907dca7[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m, [m[1;31morigin/main[m[33m, [m[1;31morigin/HEAD[m[33m)[m
Author: Sombody101 <84810042+Sombody101@users.noreply.github.com>
Date:   Sat Feb 25 14:57:28 2023 -0700

    First commit

[1mdiff --git a/.gitattributes b/.gitattributes[m
[1mnew file mode 100644[m
[1mindex 0000000..1ff0c42[m
[1m--- /dev/null[m
[1m+++ b/.gitattributes[m
[36m@@ -0,0 +1,63 @@[m
[32m+[m[32m###############################################################################[m
[32m+[m[32m# Set default behavior to automatically normalize line endings.[m
[32m+[m[32m###############################################################################[m
[32m+[m[32m* text=auto[m
[32m+[m
[32m+[m[32m###############################################################################[m
[32m+[m[32m# Set default behavior for command prompt diff.[m
[32m+[m[32m#[m
[32m+[m[32m# This is need for earlier builds of msysgit that does not have it on by[m
[32m+[m[32m# default for csharp files.[m
[32m+[m[32m# Note: This is only used by command line[m
[32m+[m[32m###############################################################################[m
[32m+[m[32m#*.cs     diff=csharp[m
[32m+[m
[32m+[m[32m###############################################################################[m
[32m+[m[32m# Set the merge driver for project and solution files[m
[32m+[m[32m#[m
[32m+[m[32m# Merging from the command prompt will add diff markers to the files if there[m
[32m+[m[32m# are conflicts (Merging from VS is not affected by the settings below, in VS[m
[32m+[m[32m# the diff markers are never inserted). Diff markers may cause the following[m[41m [m
[32m+[m[32m# file extensions to fail to load in VS. An alternative would be to treat[m
[32m+[m[32m# these files as binary and thus will always conflict and require user[m
[32m+[m[32m# intervention with every merge. To do so, just uncomment the entries below[m
[32m+[m[32m###############################################################################[m
[32m+[m[32m#*.sln       merge=binary[m
[32m+[m[32m#*.csproj    merge=binary[m
[32m+[m[32m#*.vbproj    merge=binary[m
[32m+[m[32m#*.vcxproj   merge=binary[m
[32m+[m[32m#*.vcproj    merge=binary[m
[32m+[m[32m#*.dbproj    merge=binary[m
[32m+[m[32m#*.fsproj    merge=binary[m
[32m+[m[32m#*.lsproj    merge=binary[m
[32m+[m[32m#*.wixproj   merge=binary[m
[32m+[m[32m#*.modelproj merge=binary[m
[32m+[m[32m#*.sqlproj   merge=binary[m
[32m+[m[32m#*.wwaproj   merge=binary[m
[32m+[m
[32m+[m[32m###############################################################################[m
[32m+[m[32m# behavior for image files[m
[32m+[m[32m#[m
[32m+[m[32m# image files are treated as binary by default.[m
[32m+[m[32m###############################################################################[m
[32m+[m[32m#*.jpg   binary[m
[32m+[m[32m#*.png   binary[m
[32m+[m[32m#*.gif   binary[m
[32m+[m
[32m+[m[32m###############################################################################[m
[32m+[m[32m# diff behavior for common document formats[m
[32m+[m[32m#[m[41m [m
[32m+[m[32m# Convert binary document formats to text before diffing them. This feature[m
[32m+[m[32m# is only available from the command line. Turn it on by uncommenting the[m[41m [m
[32m+[m[32m# entries below.[m
[32m+[m[32m###############################################################################[m
[32m+[m[32m#*.doc   diff=astextplain[m
[32m+[m[32m#*.DOC   diff=astextplain[m
[32m+[m[32m#*.docx  diff=astextplain[m
[32m+[m[32m#*.DOCX  diff=astextplain[m
[32m+[m[32m#*.dot   diff=astextplain[m
[32m+[m[32m#*.DOT   diff=astextplain[m
[32m+[m[32m#*.pdf   diff=astextplain[m
[32m+[m[32m#*.PDF   diff=astextplain[m
[32m+[m[32m#*.rtf   diff=astextplain[m
[32m+[m[32m#*.RTF   diff=astextplain[m
[1mdiff --git a/.gitignore b/.gitignore[m
[1mnew file mode 100644[m
[1mindex 0000000..9491a2f[m
[1m--- /dev/null[m
[1m+++ b/.gitignore[m
[36m@@ -0,0 +1,363 @@[m
[32m+[m[32m## Ignore Visual Studio temporary files, build results, and[m
[32m+[m[32m## files generated by popular Visual Studio add-ons.[m
[32m+[m[32m##[m
[32m+[m[32m## Get latest from https://github.com/github/gitignore/blob/master/VisualStudio.gitignore[m
[32m+[m
[32m+[m[32m# User-specific files[m
[32m+[m[32m*.rsuser[m
[32m+[m[32m*.suo[m
[32m+[m[32m*.user[m
[32m+[m[32m*.userosscache[m
[32m+[m[32m*.sln.docstates[m
[32m+[m
[32m+[m[32m# User-specific files (MonoDevelop/Xamarin Studio)[m
[32m+[m[32m*.userprefs[m
[32m+[m
[32m+[m[32m# Mono auto generated files[m
[32m+[m[32mmono_crash.*[m
[32m+[m
[32m+[m[32m# Build results[m
[32m+[m[32m[Dd]ebug/[m
[32m+[m[32m[Dd]ebugPublic/[m
[32m+[m[32m[Rr]elease/[m
[32m+[m[32m[Rr]eleases/[m
[32m+[m[32mx64/[m
[32m+[m[32mx86/[m
[32m+[m[32m[Ww][Ii][Nn]32/[m
[32m+[m[32m[Aa][Rr][Mm]/[m
[32m+[m[32m[Aa][Rr][Mm]64/[m
[32m+[m[32mbld/[m
[32m+[m[32m[Bb]in/[m
[32m+[m[32m[Oo]bj/[m
[32m+[m[32m[Oo]ut/[m
[32m+[m[32m[Ll]og/[m
[32m+[m[32m[Ll]ogs/[m
[32m+[m
[32m+[m[32m# Visual Studio 2015/2017 cache/options directory[m
[32m+[m[32m.vs/[m
[32m+[m[32m# Uncomment if you have tasks that create the project's static files in wwwroot[m
[32m+[m[32m#wwwroot/[m
[32m+[m
[32m+[m[32m# Visual Studio 2017 auto generated files[m
[32m+[m[32mGenerated\ Files/[m
[32m+[m
[32m+[m[32m# MSTest test Results[m
[32m+[m[32m[Tt]est[Rr]esult*/[m
[32m+[m[32m[Bb]uild[Ll]og.*[m
[32m+[m
[32m+[m[32m# NUnit[m
[32m+[m[32m*.VisualState.xml[m
[32m+[m[32mTestResult.xml[m
[32m+[m[32mnunit-*.xml[m
[32m+[m
[32m+[m[32m# Build Results of an ATL Project[m
[32m+[m[32m[Dd]ebugPS/[m
[32m+[m[32m[Rr]eleasePS/[m
[32m+[m[32mdlldata.c[m
[32m+[m
[32m+[m[32m# Benchmark Results[m
[32m+[m[32mBenchmarkDotNet.Artifacts/[m
[32m+[m
[32m+[m[32m# .NET Core[m
[32m+[m[32mproject.lock.json[m
[32m+[m[32mproject.fragment.lock.json[m
[32m+[m[32martifacts/[m
[32m+[m
[32m+[m[32m# ASP.NET Scaffolding[m
[32m+[m[32mScaffoldingReadMe.txt[m
[32m+[m
[32m+[m[32m# StyleCop[m
[32m+[m[32mStyleCopReport.xml[m
[32m+[m
[32m+[m[32m# Files built by Visual Studio[m
[32m+[m[32m*_i.c[m
[32m+[m[32m*_p.c[m
[32m+[m[32m*_h.h[m
[32m+[m[32m*.ilk[m
[32m+[m[32m*.meta[m
[32m+[m[32m*.obj[m
[32m+[m[32m*.iobj[m
[32m+[m[32m*.pch[m
[32m+[m[32m*.pdb[m
[32m+[m[32m*.ipdb[m
[32m+[m[32m*.pgc[m
[32m+[m[32m*.pgd[m
[32m+[m[32m*.rsp[m
[32m+[m[32m*.sbr[m
[32m+[m[32m*.tlb[m
[32m+[m[32m*.tli[m
[32m+[m[32m*.tlh[m
[32m+[m[32m*.tmp[m
[32m+[m[32m*.tmp_proj[m
[32m+[m[32m*_wpftmp.csproj[m
[32m+[m[32m*.log[m
[32m+[m[32m*.vspscc[m
[32m+[m[32m*.vssscc[m
[32m+[m[32m.builds[m
[32m+[m[32m*.pidb[m
[32m+[m[32m*.svclog[m
[32m+[m[32m*.scc[m
[32m+[m
[32m+[m[32m# Chutzpah Test files[m
[32m+[m[32m_Chutzpah*[m
[32m+[m
[32m+[m[32m# Visual C++ cache files[m
[32m+[m[32mipch/[m
[32m+[m[32m*.aps[m
[32m+[m[32m*.ncb[m
[32m+[m[32m*.opendb[m
[32m+[m[32m*.opensdf[m
[32m+[m[32m*.sdf[m
[32m+[m[32m*.cachefile[m
[32m+[m[32m*.VC.db[m
[32m+[m[32m*.VC.VC.opendb[m
[32m+[m
[32m+[m[32m# Visual Studio profiler[m
[32m+[m[32m*.psess[m
[32m+[m[32m*.vsp[m
[32m+[m[32m*.vspx[m
[32m+[m[32m*.sap[m
[32m+[m
[32m+[m[32m# Visual Studio Trace Files[m
[32m+[m[32m*.e2e[m
[32m+[m
[32m+[m[32m# TFS 2012 Local Workspace[m
[32m+[m[32m$tf/[m
[32m+[m
[32m+[m[32m# Guidance Automation Toolkit[m
[32m+[m[32m*.gpState[m
[32m+[m
[32m+[m[32m# ReSharper is a .NET coding add-in[m
[32m+[m[32m_ReSharper*/[m
[32m+[m[32m*.[Rr]e[Ss]harper[m
[32m+[m[32m*.DotSettings.user[m
[32m+[m
[32m+[m[32m# TeamCity is a build add-in[m
[32m+[m[32m_TeamCity*[m
[32m+[m
[32m+[m[32m# DotCover is a Code Coverage Tool[m
[32m+[m[32m*.dotCover[m
[32m+[m
[32m+[m[32m# AxoCover is a Code Coverage Tool[m
[32m+[m[32m.axoCover/*[m
[32m+[m[32m!.axoCover/settings.json[m
[32m+[m
[32m+[m[32m# Coverlet is a free, cross platform Code Coverage Tool[m
[32m+[m[32mcoverage*.json[m
[32m+[m[32mcoverage*.xml[m
[32m+[m[32mcoverage*.info[m
[32m+[m
[32m+[m[32m# Visual Studio code coverage results[m
[32m+[m[32m*.coverage[m
[32m+[m[32m*.coveragexml[m
[32m+[m
[32m+[m[32m# NCrunch[m
[32m+[m[32m_NCrunch_*[m
[32m+[m[32m.*crunch*.local.xml[m
[32m+[m[32mnCrunchTemp_*[m
[32m+[m
[32m+[m[32m# MightyMoose[m
[32m+[m[32m*.mm.*[m
[32m+[m[32mAutoTest.Net/[m
[32m+[m
[32m+[m[32m# Web workbench (sass)[m
[32m+[m[32m.sass-cache/[m
[32m+[m
[32m+[m[32m# Installshield output folder[m
[32m+[m[32m[Ee]xpress/[m
[32m+[m
[32m+[m[32m# DocProject is a documentation generator add-in[m
[32m+[m[32mDocProject/buildhelp/[m
[32m+[m[32mDocProject/Help/*.HxT[m
[32m+[m[32mDocProject/Help/*.HxC[m
[32m+[m[32mDocProject/Help/*.hhc[m
[32m+[m[32mDocProject/Help/*.hhk[m
[32m+[m[32mDocProject/Help/*.hhp[m
[32m+[m[32mDocProject/Help/Html2[m
[32m+[m[32mDocProject/Help/html[m
[32m+[m
[32m+[m[32m# Click-Once directory[m
[32m+[m[32mpublish/[m
[32m+[m
[32m+[m[32m# Publish Web Output[m
[32m+[m[32m*.[Pp]ublish.xml[m
[32m+[m[32m*.azurePubxml[m
[32m+[m[32m# Note: Comment the next line if you want to checkin your web deploy settings,[m
[32m+[m[32m# but database connection strings (with potential passwords) will be unencrypted[m
[32m+[m[32m*.pubxml[m
[32m+[m[32m*.publishproj[m
[32m+[m
[32m+[m[32m# Microsoft Azure Web App publish settings. Comment the next line if you want to[m
[32m+[m[32m# checkin your Azure Web App publish settings, but sensitive information contained[m
[32m+[m[32m# in these scripts will be unencrypted[m
[32m+[m[32mPublishScripts/[m
[32m+[m
[32m+[m[32m# NuGet Packages[m
[32m+[m[32m*.nupkg[m
[32m+[m[32m# NuGet Symbol Packages[m
[32m+[m[32m*.snupkg[m
[32m+[m[32m# The packages folder can be ignored because of Package Restore[m
[32m+[m[32m**/[Pp]ackages/*[m
[32m+[m[32m# except build/, which is used as an MSBuild target.[m
[32m+[m[32m!**/[Pp]ackages/build/[m
[32m+[m[32m# Uncomment if necessary however generally it will be regenerated when needed[m
[32m+[m[32m#!**/[Pp]ackages/repositories.config[m
[32m+[m[32m# NuGet v3's project.json files produces more ignorable files[m
[32m+[m[32m*.nuget.props[m
[32m+[m[32m*.nuget.targets[m
[32m+[m
[32m+[m[32m# Microsoft Azure Build Output[m
[32m+[m[32mcsx/[m
[32m+[m[32m*.build.csdef[m
[32m+[m
[32m+[m[32m# Microsoft Azure Emulator[m
[32m+[m[32mecf/[m
[32m+[m[32mrcf/[m
[32m+[m
[32m+[m[32m# Windows Store app package directories and files[m
[32m+[m[32mAppPackages/[m
[32m+[m[32mBundleArtifacts/[m
[32m+[m[32mPackage.StoreAssociation.xml[m
[32m+[m[32m_pkginfo.txt[m
[32m+[m[32m*.appx[m
[32m+[m[32m*.appxbundle[m
[32m+[m[32m*.appxupload[m
[32m+[m
[32m+[m[32m# Visual Studio cache files[m
[32m+[m[32m# files ending in .cache can be ignored[m
[32m+[m[32m*.[Cc]ache[m
[32m+[m[32m# but keep track of directories ending in .cache[m
[32m+[m[32m!?*.[Cc]ache/[m
[32m+[m
[32m+[m[32m# Others[m
[32m+[m[32mClientBin/[m
[32m+[m[32m~$*[m
[32m+[m[32m*~[m
[32m+[m[32m*.dbmdl[m
[32m+[m[32m*.dbproj.schemaview[m
[32m+[m[32m*.jfm[m
[32m+[m[32m*.pfx[m
[32m+[m[32m*.publishsettings[m
[32m+[m[32morleans.codegen.cs[m
[32m+[m
[32m+[m[32m# Including strong name files can present a security risk[m
[32m+[m[32m# (https://github.com/github/gitignore/pull/2483#issue-259490424)[m
[32m+[m[32m#*.snk[m
[32m+[m
[32m+[m[32m# Since there are multiple workflows, uncomment next line to ignore bower_components[m
[32m+[m[32m# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)[m
[32m+[m[32m#bower_components/[m
[32m+[m
[32m+[m[32m# RIA/Silverlight projects[m
[32m+[m[32mGenerated_Code/[m
[32m+[m
[32m+[m[32m# Backup & report files from converting an old project file[m
[32m+[m[32m# to a newer Visual Studio version. Backup files are not needed,[m
[32m+[m[32m# because we have git ;-)[m
[32m+[m[32m_UpgradeReport_Files/[m
[32m+[m[32mBackup*/[m
[32m+[m[32mUpgradeLog*.XML[m
[32m+[m[32mUpgradeLog*.htm[m
[32m+[m[32mServiceFabricBackup/[m
[32m+[m[32m*.rptproj.bak[m
[32m+[m
[32m+[m[32m# SQL Server files[m
[32m+[m[32m*.mdf[m
[32m+[m[32m*.ldf[m
[32m+[m[32m*.ndf[m
[32m+[m
[32m+[m[32m# Business Intelligence projects[m
[32m+[m[32m*.rdl.data[m
[32m+[m[32m*.bim.layout[m
[32m+[m[32m*.bim_*.settings[m
[32m+[m[32m*.rptproj.rsuser[m
[32m+[m[32m*- [Bb]ackup.rdl[m
[32m+[m[32m*- [Bb]ackup ([0-9]).rdl[m
[32m+[m[32m*- [Bb]ackup ([0-9][0-9]).rdl[m
[32m+[m
[32m+[m[32m# Microsoft Fakes[m
[32m+[m[32mFakesAssemblies/[m
[32m+[m
[32m+[m[32m# GhostDoc plugin setting file[m
[32m+[m[32m*.GhostDoc.xml[m
[32m+[m
[32m+[m[32m# Node.js Tools for Visual Studio[m
[32m+[m[32m.ntvs_analysis.dat[m
[32m+[m[32mnode_modules/[m
[32m+[m
[32m+[m[32m# Visual Studio 6 build log[m
[32m+[m[32m*.plg[m
[32m+[m
[32m+[m[32m# Visual Studio 6 workspace options file[m
[32m+[m[32m*.opt[m
[32m+[m
[32m+[m[32m# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)[m
[32m+[m[32m*.vbw[m
[32m+[m
[32m+[m[32m# Visual Studio LightSwitch build output[m
[32m+[m[32m**/*.HTMLClient/GeneratedArtifacts[m
[32m+[m[32m**/*.DesktopClient/GeneratedArtifacts[m
[32m+[m[32m**/*.DesktopClient/ModelManifest.xml[m
[32m+[m[32m**/*.Server/GeneratedArtifacts[m
[32m+[m[32m**/*.Server/ModelManifest.xml[m
[32m+[m[32m_Pvt_Extensions[m
[32m+[m
[32m+[m[32m# Paket dependency manager[m
[32m+[m[32m.paket/paket.exe[m
[32m+[m[32mpaket-files/[m
[32m+[m
[32m+[m[32m# FAKE - F# Make[m
[32m+[m[32m.fake/[m
[32m+[m
[32m+[m[32m# CodeRush personal settings[m
[32m+[m[32m.cr/personal[m
[32m+[m
[32m+[m[32m# Python Tools for Visual Studio (PTVS)[m
[32m+[m[32m__pycache__/[m
[32m+[m[32m*.pyc[m
[32m+[m
[32m+[m[32m# Cake - Uncomment if you are using it[m
[32m+[m[32m# tools/**[m
[32m+[m[32m# !tools/packages.config[m
[32m+[m
[32m+[m[32m# Tabs Studio[m
[32m+[m[32m*.tss[m
[32m+[m
[32m+[m[32m# Telerik's JustMock configuration file[m
[32m+[m[32m*.jmconfig[m
[32m+[m
[32m+[m[32m# BizTalk build output[m
[32m+[m[32m*.btp.cs[m
[32m+[m[32m*.btm.cs[m
[32m+[m[32m*.odx.cs[m
[32m+[m[32m*.xsd.cs[m
[32m+[m
[32m+[m[32m# OpenCover UI analysis results[m
[32m+[m[32mOpenCover/[m
[32m+[m
[32m+[m[32m# Azure Stream Analytics local run output[m
[32m+[m[32mASALocalRun/[m
[32m+[m
[32m+[m[32m# MSBuild Binary and Structured Log[m
[32m+[m[32m*.binlog[m
[32m+[m
[32m+[m[32m# NVidia Nsight GPU debugger configuration file[m
[32m+[m[32m*.nvuser[m
[32m+[m
[32m+[m[32m# MFractors (Xamarin productivity tool) working folder[m
[32m+[m[32m.mfractor/[m
[32m+[m
[32m+[m[32m# Local History for Visual Studio[m
[32m+[m[32m.localhistory/[m
[32m+[m
[32m+[m[32m# BeatPulse healthcheck temp database[m
[32m+[m[32mhealthchecksdb[m
[32m+[m
[32m+[m[32m# Backup folder for Package Reference Convert tool in Visual Studio 2017[m
[32m+[m[32mMigrationBackup/[m
[32m+[m
[32m+[m[32m# Ionide (cross platform F# VS Code tools) working folder[m
[32m+[m[32m.ionide/[m
[32m+[m
[32m+[m[32m# Fody - auto-generated XML schema[m
[32m+[m[32mFodyWeavers.xsd[m
\ No newline at end of file[m
[1mdiff --git a/FodyWeavers.xml b/FodyWeavers.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..9208051[m
[1m--- /dev/null[m
[1m+++ b/FodyWeavers.xml[m
[36m@@ -0,0 +1,5 @@[m
[32m+[m[32m﻿<Weavers xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="FodyWeavers.xsd">[m
[32m+[m[32m  <Costura>[m
[32m+[m[32m    <CosturaVerbose>true</CosturaVerbose>[m
[32m+[m[32m  </Costura>[m
[32m+[m[32m</Weavers>[m
[1mdiff --git a/LICENSE.txt b/LICENSE.txt[m
[1mnew file mode 100644[m
[1mindex 0000000..8aa2645[m
[1m--- /dev/null[m
[1m+++ b/LICENSE.txt[m
[36m@@ -0,0 +1,21 @@[m
[32m+[m[32mMIT License[m
[32m+[m
[32m+[m[32mCopyright (c) [year] [fullname][m
[32m+[m
[32m+[m[32mPermission is hereby granted, free of charge, to any person obtaining a copy[m
[32m+[m[32mof this software and associated documentation files (the "Software"), to deal[m
[32m+[m[32min the Software without restriction, including without limitation the rights[m
[32m+[m[32mto use, copy, modify, merge, publish, distribute, sublicense, and/or sell[m
[32m+[m[32mcopies of the Software, and to permit persons to whom the Software is[m
[32m+[m[32mfurnished to do so, subject to the following conditions:[m
[32m+[m
[32m+[m[32mThe above copyright notice and this permission notice shall be included in all[m
[32m+[m[32mcopies or substantial portions of the Software.[m
[32m+[m
[32m+[m[32mTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR[m
[32m+[m[32mIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,[m
[32m+[m[32mFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE[m
[32m+[m[32mAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER[m
[32m+[m[32mLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,[m
[32m+[m[32mOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE[m
[32m+[m[32mSOFTWARE.[m
[1mdiff --git a/Program.cs b/Program.cs[m
[1mnew file mode 100644[m
[1mindex 0000000..619acc6[m
[1m--- /dev/null[m
[1m+++ b/Program.cs[m
[36m@@ -0,0 +1,274 @@[m
[32m+[m[32musing Spectre.Console;[m
[32m+[m[32musing System.Diagnostics;[m
[32m+[m[32musing System.Security.AccessControl;[m
[32m+[m[32musing YamlDotNet.Serialization;[m
[32m+[m
[32m+[m[32mnamespace QuickSearch;[m
[32m+[m
[32m+[m[32m#pragma warning disable IDE1006[m
[32m+[m[32mpublic class Program[m
[32m+[m[32m{[m
[32m+[m[32m    public static void Main(string[] args)[m
[32m+[m[32m    {[m
[32m+[m[32m        if (!(OperatingSystem.IsWindows() || OperatingSystem.IsLinux()))[m
[32m+[m[32m        {[m
[32m+[m[32m            log("This app will only work with Windows or Linux", 3);[m
[32m+[m[32m            return;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        if (args.Length > 0 && System.IO.Path.GetExtension(args[0]).ToLower() == ".sh")[m
[32m+[m[32m        {[m
[32m+[m[32m            log("This app has not been tested to work in scripts. Be advised.", 2);[m
[32m+[m[32m            var l = args.ToList();[m
[32m+[m[32m            l.Remove(args[0]);[m
[32m+[m[32m            args = l.ToArray();[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        if (args.Length is 0)[m
[32m+[m[32m        {[m
[32m+[m[32m            log("No arguments provided", 3);[m
[32m+[m[32m            return;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        // Setup Args[m
[32m+[m[32m        Args inpArgs;[m
[32m+[m[32m        try[m
[32m+[m[32m        {[m
[32m+[m[32m            ReadSettings(out inpArgs);[m
[32m+[m[32m            if (inpArgs is null)[m
[32m+[m[32m            {[m
[32m+[m[32m                log("Settigns file is empty. Proceeding with default values", 2);[m
[32m+[m[32m                inpArgs = new();[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m        catch (FileNotFoundException)[m
[32m+[m[32m        {[m
[32m+[m[32m            log($"Could not find '{InAppArgs.PathToSettings()}'. Proceeding with default values", 2);[m
[32m+[m[32m            inpArgs = new();[m
[32m+[m[32m        }[m
[32m+[m[32m        catch (Exception ex)[m
[32m+[m[32m        {[m
[32m+[m[32m            log($"Unknown error while loading 'qs-settings.yaml'\r\nError message: {ex.Message}", 3);[m
[32m+[m[32m            return;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        for (int i = 0; i < args.Length; i++)[m
[32m+[m[32m        {[m
[32m+[m[32m            string arg = args[i];[m
[32m+[m[32m            if (arg.Contains(':'))[m
[32m+[m[32m            {[m
[32m+[m[32m                // Sets the settins in the .yaml file[m
[32m+[m[32m                TrySep(arg, out string setting, out string value);[m
[32m+[m[32m                switch (setting)[m
[32m+[m[32m                {[m
[32m+[m[32m                    case "--pref-search-engine":[m
[32m+[m[32m                        inpArgs.PreferedSearchEngine = value;[m
[32m+[m[32m                        args[i] = "";[m
[32m+[m[32m                        break;[m
[32m+[m[32m                    case "--pref-profile":[m
[32m+[m[32m                        inpArgs.PreferedProfile = value;[m
[32m+[m[32m                        args[i] = "";[m
[32m+[m[32m                        break;[m
[32m+[m[32m                    default:[m
[32m+[m[32m                        log($"Can't parse argument '{setting}'", 3);[m
[32m+[m[32m                        return;[m
[32m+[m[32m                }[m
[32m+[m[32m                WriteSettings(inpArgs);[m
[32m+[m[32m            }[m
[32m+[m[32m            else if (arg.StartsWith("-"))[m
[32m+[m[32m                switch (arg)[m
[32m+[m[32m                {[m
[32m+[m[32m                    // Sets temporary settings for single use[m
[32m+[m[32m                    case "-se":[m
[32m+[m[32m                    case "--search-engine":[m
[32m+[m[32m                        args[i] = "";[m
[32m+[m[32m                        inpArgs.PreferedSearchEngine = args[++i];[m
[32m+[m[32m                        args[i] = "";[m
[32m+[m[32m                        break;[m
[32m+[m[32m                    case "-p":[m
[32m+[m[32m                    case "--profile":[m
[32m+[m[32m                        args[i] = "";[m
[32m+[m[32m                        inpArgs.PreferedProfile = args[++i];[m
[32m+[m[32m                        args[i] = "";[m
[32m+[m[32m                        break;[m
[32m+[m[32m                    case "-gs":[m
[32m+[m[32m                    case "--generate-settings":[m
[32m+[m[32m                        WriteSettings(inpArgs);[m
[32m+[m[32m                        args[i] = "";[m
[32m+[m[32m                        break;[m
[32m+[m[32m                    default:[m
[32m+[m[32m                        log($"Can't parse argument '{arg}'", 3);[m
[32m+[m[32m                        return;[m
[32m+[m[32m                }[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        string sitelist = "";[m
[32m+[m[32m        if (inpArgs.SpecifiedSiteList.Length is 0)[m
[32m+[m[32m        {[m
[32m+[m[32m            sitelist = "+";[m
[32m+[m[32m            inpArgs.SpecifiedSiteList = InAppArgs.CodeSiteList;[m
[32m+[m
[32m+[m[32m            string[] tmp = new string[args.Length];[m
[32m+[m[32m            for (int i = 0; i < tmp.Length; i++)[m
[32m+[m[32m                if (args[i] is not "")[m
[32m+[m[32m                {[m
[32m+[m[32m                    tmp[i] = args[i];[m
[32m+[m[32m                    Console.Write(tmp[i] + ": ");[m
[32m+[m[32m                }[m
[32m+[m
[32m+[m[32m            args = tmp;[m
[32m+[m[32m            if (args.Length is 0 or 1)[m
[32m+[m[32m            {[m
[32m+[m[32m                log("No search terms entered", 3);[m
[32m+[m[32m                return;[m
[32m+[m[32m            }[m
[32m+[m
[32m+[m[32m            foreach (string site in inpArgs.SpecifiedSiteList)[m
[32m+[m[32m                sitelist += site + "+OR+";[m
[32m+[m[32m            sitelist = sitelist[..^4];[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        string searchTerms = "";[m
[32m+[m[32m        foreach (string arg in args)[m
[32m+[m[32m            searchTerms += arg + "+";[m
[32m+[m[32m        searchTerms = searchTerms[..^1];[m
[32m+[m
[32m+[m[32m        var searchLink = $"\"https://google.com/search?q={searchTerms}{sitelist}\"";[m
[32m+[m
[32m+[m[32m        if (!File.Exists(inpArgs.PreferedSearchEngine))[m
[32m+[m[32m        {[m
[32m+[m[32m            log($"Failed to find search engine app with path '{inpArgs.PreferedSearchEngine}'");[m
[32m+[m[32m            return;[m
[32m+[m[32m        }[m
[32m+[m[32m        Action StartApp = () => Process.Start(new ProcessStartInfo()[m
[32m+[m[32m        {[m
[32m+[m[32m            FileName = inpArgs.PreferedSearchEngine,[m
[32m+[m[32m            WorkingDirectory = OperatingSystem.IsLinux() ? "/" : Directory.GetCurrentDirectory(),[m
[32m+[m[32m            Arguments = $"--profile-directory=\"{inpArgs.PreferedProfile}\" {searchLink}",[m
[32m+[m[32m        });[m
[32m+[m
[32m+[m[32m        WaitFor("Starting search engine...", StartApp).GetAwaiter().GetResult();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public static string helpText =[m
[32m+[m[32m    $@"qs []";[m
[32m+[m
[32m+[m[32m    public static void log(string message, byte severity = 0)[m
[32m+[m[32m    {[m
[32m+[m[32m        Console.WriteLine($"qs: " +[m
[32m+[m[32m            $"{(severity is 1 ? c.White : (severity is 2 ? c.Yellow : c.Red))}" +[m
[32m+[m[32m            $"{(severity is 1 ? "message" : (severity is 2 ? "warning" : "fatal"))}{c.norm}: " +[m
[32m+[m[32m            $"{message}");[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public static async Task WaitFor(string message, Action action)[m
[32m+[m[32m    {[m
[32m+[m[32m        AnsiConsole.Status()[m
[32m+[m[32m            .Spinner(Spinner.Known.Star)[m
[32m+[m[32m            .Start(message, ctx =>[m
[32m+[m[32m            {[m
[32m+[m[32m                action();[m
[32m+[m[32m            });[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public static void WriteSettings(Args args)[m
[32m+[m[32m    {[m
[32m+[m[32m        try[m
[32m+[m[32m        {[m
[32m+[m[32m            if (!File.Exists(InAppArgs.PathToSettings()))[m
[32m+[m[32m            {[m
[32m+[m[32m                using FileStream fileStream = File.Create(InAppArgs.PathToSettings());[m
[32m+[m[32m                if (OperatingSystem.IsWindows())[m
[32m+[m[32m                {[m
[32m+[m[32m                    FileSecurity fileSecurity = new();[m
[32m+[m[32m                    fileSecurity.SetAccessRule(new("Everyone", FileSystemRights.ReadAndExecute | FileSystemRights.Write, AccessControlType.Allow));[m
[32m+[m[32m                    fileStream.SetAccessControl(fileSecurity);[m
[32m+[m[32m                }[m
[32m+[m[32m                else[m
[32m+[m[32m                {[m
[32m+[m[32m                    var process = new Process();[m
[32m+[m[32m                    process.StartInfo.FileName = "/bin/chmod";[m
[32m+[m[32m                    process.StartInfo.Arguments = "666 " + InAppArgs.PathToSettings();[m
[32m+[m[32m                    process.Start();[m
[32m+[m[32m                    process.WaitForExit();[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m
[32m+[m[32m            File.WriteAllText(InAppArgs.PathToSettings(), new SerializerBuilder().Build().Serialize(args));[m
[32m+[m[32m        }[m
[32m+[m[32m        catch (UnauthorizedAccessException)[m
[32m+[m[32m        {[m
[32m+[m[32m            log($"Failed to create '{InAppArgs.PathToSettings()}'. Either create the file using " +[m
[32m+[m[32m                $"'> {InAppArgs.PathToSettings()}', or run qs " +[m
[32m+[m[32m                $"{(OperatingSystem.IsWindows() ? "in an admin window" : "with sudo")}.", 3);[m
[32m+[m[32m            Environment.Exit(1);[m
[32m+[m[32m        }[m
[32m+[m[32m        catch (Exception)[m
[32m+[m[32m        {[m
[32m+[m[32m            log($"Unkown error while creating or editing {InAppArgs.PathToSettings()}", 3);[m
[32m+[m[32m            Environment.Exit(1);[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public static void ReadSettings(out Args args)[m
[32m+[m[32m    {[m
[32m+[m[32m        args = new DeserializerBuilder().Build().Deserialize<Args>(File.ReadAllText(InAppArgs.PathToSettings()));[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public static bool TrySep(string input, out string firstPart, out string secondPart)[m
[32m+[m[32m    {[m
[32m+[m[32m        int delimiterIndex = input.IndexOf(':');[m
[32m+[m
[32m+[m[32m        if (delimiterIndex is -1)[m
[32m+[m[32m        {[m
[32m+[m[32m            firstPart = input;[m
[32m+[m[32m            secondPart = null;[m
[32m+[m[32m            return false;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        firstPart = input[..delimiterIndex].Trim();[m
[32m+[m[32m        secondPart = input[(delimiterIndex + 1)..].Trim();[m
[32m+[m[32m        return true;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mpublic static class InAppArgs[m
[32m+[m[32m{[m
[32m+[m[32m    public static string PathToSettings() => OperatingSystem.IsWindows() ?[m
[32m+[m[32m        Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) +[m
[32m+[m[32m        "\\qs-settings.yaml" : "/etc/qs-settings.yaml";[m
[32m+[m[32m    public static string[] CodeSiteList = {[m
[32m+[m[32m        "site:stackoverflow.com",[m
[32m+[m[32m        "site:reddit.com",[m
[32m+[m[32m        "site:github.com",[m
[32m+[m[32m    };[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mpublic class Args[m
[32m+[m[32m{[m
[32m+[m[32m    public string PreferedSearchEngine = "/mnt/c/Program Files/Google/Chrome/Application/chrome.exe";[m
[32m+[m[32m    public string PreferedProfile = "Default";[m
[32m+[m[32m    public string[] SpecifiedSiteList = { };[m
[32m+[m[32m    public string[] CasualSiteList = { };[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mpublic static class c[m
[32m+[m[32m{[m
[32m+[m[32m    public const string Black = "\u001b[30m";[m
[32m+[m[32m    public const string Red = "\u001b[38;2;255;75;75m";[m
[32m+[m[32m    public const string Green = "\u001b[32m";[m
[32m+[m[32m    public const string Yellow = "\u001b[33m";[m
[32m+[m[32m    public const string Blue = "\u001b[34m";[m
[32m+[m[32m    public const string Magenta = "\u001b[35m";[m
[32m+[m[32m    public const string Cyan = "\u001b[36m";[m
[32m+[m[32m    public const string White = "\u001b[37m";[m
[32m+[m[32m    public const string norm = "\u001b[0m";[m
[32m+[m[32m    public const string BBlack = "\u001b[30;1m";[m
[32m+[m[32m    public const string BGreen = "\u001b[32;1m";[m
[32m+[m[32m    public const string BYellow = "\u001b[33;1m";[m
[32m+[m[32m    public const string BBlue = "\u001b[34;1m";[m
[32m+[m[32m    public const string BMagenta = "\u001b[35;1m";[m
[32m+[m[32m    public const string BCyan = "\u001b[36;1m";[m
[32m+[m[32m    public const string BWhite = "\u001b[37;1m";[m
[32m+[m[32m    public const string Pink = "\u001b[31m";[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/qs.csproj b/qs.csproj[m
[1mnew file mode 100644[m
[1mindex 0000000..ab99dd0[m
[1m--- /dev/null[m
[1m+++ b/qs.csproj[m
[36m@@ -0,0 +1,20 @@[m
[32m+[m[32m<Project Sdk="Microsoft.NET.Sdk">[m
[32m+[m
[32m+[m[32m  <PropertyGroup>[m
[32m+[m[32m    <OutputType>Exe</OutputType>[m
[32m+[m[32m    <TargetFramework>net6.0</TargetFramework>[m
[32m+[m[32m    <ImplicitUsings>enable</ImplicitUsings>[m
[32m+[m[32m    <Nullable>enable</Nullable>[m
[32m+[m[32m  </PropertyGroup>[m
[32m+[m
[32m+[m[32m  <ItemGroup>[m
[32m+[m[32m    <PackageReference Include="Costura.Fody" Version="5.7.0">[m
[32m+[m[32m      <PrivateAssets>all</PrivateAssets>[m
[32m+[m[32m      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>[m
[32m+[m[32m    </PackageReference>[m
[32m+[m[32m    <PackageReference Include="Spectre.Console" Version="0.46.0" />[m
[32m+[m[32m    <PackageReference Include="Spectre.Console.Cli" Version="0.46.0" />[m
[32m+[m[32m    <PackageReference Include="YamlDotNet" Version="13.0.1" />[m
[32m+[m[32m  </ItemGroup>[m
[32m+[m
[32m+[m[32m</Project>[m
[1mdiff --git a/qs.sln b/qs.sln[m
[1mnew file mode 100644[m
[1mindex 0000000..debbedb[m
[1m--- /dev/null[m
[1m+++ b/qs.sln[m
[36m@@ -0,0 +1,22 @@[m
[32m+[m[32m﻿[m
[32m+[m[32mMicrosoft Visual Studio Solution File, Format Version 12.00[m
[32m+[m[32m# Visual Studio Version 17[m
[32m+[m[32mVisualStudioVersion = 17.0.31903.59[m
[32m+[m[32mMinimumVisualStudioVersion = 10.0.40219.1[m
[32m+[m[32mProject("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "qs", "qs.csproj", "{A7BE12E3-E3D3-4F2D-8BE8-75DEBE207D58}"[m
[32m+[m[32mEndProject[m
[32m+[m[32mGlobal[m
[32m+[m	[32mGlobalSection(SolutionConfigurationPlatforms) = preSolution[m
[32m+[m		[32mDebug|Any CPU = Debug|Any CPU[m
[32m+[m		[32mRelease|Any CPU = Release|Any CPU[m
[32m+[m	[32mEndGlobalSection[m
[32m+[m	[32mGlobalSection(SolutionProperties) = preSolution[m
[32m+[m		[32mHideSolutionNode = FALSE[m
[32m+[m	[32mEndGlobalSection[m
[32m+[m	[32mGlobalSection(ProjectConfigurationPlatforms) = postSolution[m
[32m+[m		[32m{A7BE12E3-E3D3-4F2D-8BE8-75DEBE207D58}.Debug|Any CPU.ActiveCfg = Debug|Any CPU[m
[32m+[m		[32m{A7BE12E3-E3D3-4F2D-8BE8-75DEBE207D58}.Debug|Any CPU.Build.0 = Debug|Any CPU[m
[32m+[m		[32m{A7BE12E3-E3D3-4F2D-8BE8-75DEBE207D58}.Release|Any CPU.ActiveCfg = Release|Any CPU[m
[32m+[m		[32m{A7BE12E3-E3D3-4F2D-8BE8-75DEBE207D58}.Release|Any CPU.Build.0 = Release|Any CPU[m
[32m+[m	[32mEndGlobalSection[m
[32m+[m[32mEndGlobal[m
